spring.application.name=backend
# Configurações do H2 Database
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Habilitar console do H2 (acessível em http://localhost:8080/h2-console)
#spring.h2.console.enabled=true

# ===============================================================
# CONFIGURAÇÃO DO BANCO DE DADOS POSTGRESQL
# ===============================================================

# URL de Conexão com o Banco
# Formato: jdbc:postgresql://<host>:<porta>/<nome_do_banco>
# O <nome_do_banco> DEVE ser criado manualmente antes de rodar a aplicação.
spring.datasource.url=jdbc:postgresql://localhost:5432/contabil

# Usuário e Senha do Banco de Dados
spring.datasource.username=postgres
spring.datasource.password=postgres

# Driver do PostgreSQL (O Spring Boot moderno geralmente detecta isso sozinho, mas é bom ter)
spring.datasource.driver-class-name=org.postgresql.Driver
# Dialeto específico para o PostgreSQL, ajuda o Hibernate a gerar o SQL correto
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Esta é a propriedade MÁGICA para o gerenciamento automático de tabelas (DDL - Data Definition Language)
# Use 'update' para desenvolvimento. Ele tentará manter os dados existentes.
# Use 'create' se quiser que as tabelas sejam recriadas do zero a cada reinicialização (apaga todos os dados).
spring.jpa.hibernate.ddl-auto=update
# Mostra no console o SQL que o Hibernate está executando (ótimo para debug)
spring.jpa.show-sql=true
# Formata o SQL exibido no console para ficar mais legível
spring.jpa.properties.hibernate.format_sql=true